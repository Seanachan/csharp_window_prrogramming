<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>